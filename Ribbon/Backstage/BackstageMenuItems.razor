@page "/backstagemenuitems"

@using Syncfusion.Blazor.Ribbon;
@using Syncfusion.Blazor.SplitButtons;

<BackstageNav></BackstageNav>

<div style="width:75%">
    <SfRibbon>
        <RibbonBackstageMenuSettings Text="File" Visible="true">
            <BackstageMenuItems>
                <BackstageMenuItem ID="home" Text="Home" IconCss="e-icons e-home">@GetBackstageContent("home")</BackstageMenuItem>
                <BackstageMenuItem ID="new" Text="New" IconCss="e-icons e-file-new">@GetBackstageContent("new")</BackstageMenuItem>
                <BackstageMenuItem ID="open" Text="Open" IconCss="e-icons e-folder-open">@GetBackstageContent("open")</BackstageMenuItem>
            </BackstageMenuItems>
        </RibbonBackstageMenuSettings>
        <RibbonTabs>
            <RibbonTab HeaderText="Home">
                <RibbonGroups>
                    <RibbonGroup HeaderText="Clipboard">
                        <RibbonCollections>
                            <RibbonCollection>
                                <RibbonItems>
                                    <RibbonItem Type=RibbonItemType.SplitButton>
                                        <RibbonSplitButtonSettings Content="Paste" IconCss="e-icons e-paste" Items="@formatItems"></RibbonSplitButtonSettings>
                                    </RibbonItem>
                                </RibbonItems>
                            </RibbonCollection>
                            <RibbonCollection>
                                <RibbonItems>
                                    <RibbonItem Type=RibbonItemType.Button>
                                        <RibbonButtonSettings Content="Cut" IconCss="e-icons e-cut" ></RibbonButtonSettings>
                                    </RibbonItem>
                                    <RibbonItem Type=RibbonItemType.Button>
                                        <RibbonButtonSettings Content="Copy" IconCss="e-icons e-copy"></RibbonButtonSettings>
                                    </RibbonItem>
                                    <RibbonItem Type=RibbonItemType.Button>
                                        <RibbonButtonSettings Content="Format Painter" IconCss="e-icons e-format-painter"></RibbonButtonSettings>
                                    </RibbonItem>
                                </RibbonItems>
                            </RibbonCollection>
                        </RibbonCollections>
                    </RibbonGroup>
                </RibbonGroups>
            </RibbonTab>
        </RibbonTabs>
    </SfRibbon>
</div>

@code{
    List<DropDownMenuItem> formatItems = new List<DropDownMenuItem>()
    {
        new DropDownMenuItem{ Text = "Keep Source Format" },
        new DropDownMenuItem{ Text = "Merge Format" },
        new DropDownMenuItem{ Text = "Keep Text Only" }
    };

    RenderFragment GetBackstageContent(string item) => item switch
{
    "home" => @<div class="home-wrapper">
    <div class="new-wrapper">
        <div class="section-title">New</div>
        <div class="category_container">
            <div class="doc_category_image"></div>
            <span class="doc_category_text">New document</span>
        </div>
    </div>
    <div class="block-wrapper">
        <div class="section-title">Recent</div>
        @{
    var recentDocuments = new List<(string icon, string name, string description)>
    {
    ("e-notes", "Classic_layout.docx", "EJ2 >> Components >> Navigations >> Ribbon >> layouts"),
    };
        }
        @foreach (var doc in recentDocuments)
    {
        @RenderWrapperContent(doc.icon, doc.name, doc.description)
    }
    </div>
</div>,
    "new" => @<div class="new-wrapper">
    <div class="section-title">New</div>
    <div class="category_container">
        <div class="doc_category_image"></div>
        <span class="doc_category_text">New document</span>
    </div>
</div>,
    "open" => @<div class="block-wrapper">
    <div class="section-title">Recent</div>
    @{
var recentDocuments = new List<(string icon, string name, string description)>
{
("e-notes", "Classic_layout.docx", "EJ2 >> Components >> Navigations >> Ribbon >> layouts"),
("e-notes", "Simplified_layout.docx", "EJ2 >> Components >> Navigations >> Ribbon >> layouts"),
};
    }
    @foreach (var doc in recentDocuments)
{
    @RenderWrapperContent(doc.icon, doc.name, doc.description)
}
</div>
};

RenderFragment RenderWrapperContent(string icon, string name, string description) =>
@<div class="section-content">
    <table>
        <tbody>
            <tr>
                <td><span class="doc_icon e-icons @icon"></span></td>
                <td>
                    <span style="display: block; font-size: 14px">@name</span>
                    <span style="font-size: 12px">@description</span>
                </td>
            </tr>
        </tbody>
    </table>
</div>;
}

<style>
    /* Sample level styles */
    .e-ribbon-backstage-content > div:first-child {
        width: 550px;
        padding: 25px;
        height: 510px;
    }

    #home_content .new-wrapper {
        margin-bottom: 15px;
    }

    .section-title {
        font-size: 22px;
    }

    .new-docs {
        display: flex;
        justify-content: space-around;
        flex-wrap: wrap;
    }

    .category_container {
        width: 150px;
        padding: 15px;
        text-align: center;
        cursor: pointer;
    }

    .doc_category_image {
        width: 80px;
        height: 100px;
        background-color: #fff;
        border: 1px solid rgb(125, 124, 124);
        text-align: center;
        overflow: hidden;
        margin: 0px auto 10px;
    }

    .doc_category_text {
        font-size: 16px;
    }

    .section-content {
        padding: 12px 0px;
        cursor: pointer;
    }

    .doc_icon {
        font-size: 16px;
        padding: 0px 10px;
    }

    /* Hover styles */
    .category_container:hover,
    .section-content:hover {
        background-color: #dfdfdf;
        border-radius: 5px;
        transition: all 0.3s;
    }
</style>