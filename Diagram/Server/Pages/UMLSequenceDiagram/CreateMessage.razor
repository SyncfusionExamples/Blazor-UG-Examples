@page "/CreateMessage"
@using Syncfusion.Blazor.Diagram

<SfDiagramComponent @ref="Diagram" Height="600px" Model="@DiagramModel">
    <SnapSettings Constraints="SnapConstraints.None" />
</SfDiagramComponent>

@code
{
    private SfDiagramComponent Diagram;
    private UmlSequenceDiagramModel DiagramModel;

    protected override void OnInitialized()
    {
        // Create participants
        List<UmlSequenceParticipant> participants = new List<UmlSequenceParticipant>()
        {
            new UmlSequenceParticipant()
            {
                ID = "User",
                Content = "User",
                IsActor = true
            },
            new UmlSequenceParticipant()
            {
                ID = "System",
                Content = "System",
                IsActor = false,
                ShowDestructionMarker = true
            },
            new UmlSequenceParticipant()
            {
                ID = "Logger",
                Content = "Logger",
                IsActor = false,
                ShowDestructionMarker = true
            },
            new UmlSequenceParticipant()
            {
                ID = "SessionManager",
                Content = "SessionManager",
                IsActor = false
            }
        };

        // Create messages
        List<UmlSequenceMessage> messages = new List<UmlSequenceMessage>()
        {
            new UmlSequenceMessage()
            {
                ID = "MSG1",
                Content = "Login Request",
                FromParticipantID = "User",
                ToParticipantID = "System",
                MessageType = UmlSequenceMessageType.Synchronous
            },
            new UmlSequenceMessage()
            {
                ID = "MSG2",
                Content = "Login Response",
                FromParticipantID = "System",
                ToParticipantID = "User",
                MessageType = UmlSequenceMessageType.Reply
            },
            new UmlSequenceMessage()
            {
                ID = "MSG3",
                Content = "Log Event",
                FromParticipantID = "System",
                ToParticipantID = "Logger",
                MessageType = UmlSequenceMessageType.Asynchronous
            },
            new UmlSequenceMessage()
            {
                ID = "MSG4",
                Content = "Create Session",
                FromParticipantID = "System",
                ToParticipantID = "SessionManager",
                MessageType = UmlSequenceMessageType.Create
            },
            new UmlSequenceMessage()
            {
                ID = "MSG5",
                Content = "Delete Session",
                FromParticipantID = "System",
                ToParticipantID = "SessionManager",
                MessageType = UmlSequenceMessageType.Delete
            },
            new UmlSequenceMessage()
            {
                ID = "MSG6",
                Content = "Validate Inputs",
                FromParticipantID = "System",
                ToParticipantID = "System",
                MessageType = UmlSequenceMessageType.Self
            }
        };

        // Initialize UML Sequence Diagram model
        DiagramModel = new UmlSequenceDiagramModel()
        {
            Participants = participants,
            Messages = messages
        };
    }
}
