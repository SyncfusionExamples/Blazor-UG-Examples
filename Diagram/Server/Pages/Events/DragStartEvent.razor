@page "/DragStartEvent"

@using Syncfusion.Blazor.Diagram
@using System.Collections.ObjectModel
@using Syncfusion.Blazor.Diagram.SymbolPalette

<SfDiagramComponent @ref="@Diagram" Width="100%" Height="700px" Nodes="nodes" DragStart="DragStart" />
<SfSymbolPaletteComponent @ref="PaletteInstance" Height="600px" Palettes="@Palettes" SymbolHeight="40" GetSymbolInfo="GetSymbolInfo" SymbolWidth="40" >
</SfSymbolPaletteComponent >

@code
{
    private SfDiagramComponent Diagram;
	private SfSymbolPaletteComponent PaletteInstance;
    private DiagramObjectCollection<Palette> Palettes = new DiagramObjectCollection<Palette>();
    private DiagramObjectCollection<NodeBase> TNodes = new DiagramObjectCollection<NodeBase>();
    private DiagramObjectCollection<Node> nodes = new DiagramObjectCollection<Node>();
    
    private SymbolInfo GetSymbolInfo(IDiagramObject symbol)
    {
            SymbolInfo SymbolInfo = new SymbolInfo();
            SymbolInfo.Fit = true;
            return SymbolInfo;
    }

    protected override void OnInitialized()
    {
        TNodes = new DiagramObjectCollection<NodeBase>();
        Node TNode2 = new Node()
        { 
            ID = "node1", 
            Shape = new FlowShape() { Type = NodeShapes.Flow, Shape = NodeFlowShapes.Decision } 
        };
        TNodes.Add(TNode2);
        Palettes = new DiagramObjectCollection<Palette>()
        {
        new Palette(){Symbols =TNodes,Title="Flow Shapes",ID="Flow Shapes" },
        };
    }

	protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        PaletteInstance.Targets = new DiagramObjectCollection<SfDiagramComponent>() { };
        PaletteInstance.Targets.Add(Diagram);
    }

    //Notify the drag start event.
    private void DragStart(DragStartEventArgs args)
    {
        //Action to be performed.
    }
}