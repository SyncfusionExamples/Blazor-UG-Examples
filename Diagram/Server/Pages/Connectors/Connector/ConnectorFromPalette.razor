@page "/ConnectorFromPalette"

@using Syncfusion.Blazor.Diagram
@using Syncfusion.Blazor.Diagram.SymbolPalette
<div style="width: 200px; float: left">
    <SfSymbolPaletteComponent Height="600px" @ref="@PaletteInstance" Palettes="@Palettes">
    </SfSymbolPaletteComponent>
</div>
<SfDiagramComponent @ref="@DiagramInstance" Width="1000px" Height="500px" Connectors="@connectors"></SfDiagramComponent>
@code {
    //Reference the Symbolpalette
    SfSymbolPaletteComponent PaletteInstance;
    //Reference the diagram
    SfDiagramComponent DiagramInstance;
    //Defines Symbol palette's PaletteConnector collection
    DiagramObjectCollection<NodeBase> PaletteConnector = new DiagramObjectCollection<NodeBase>();
    DiagramObjectCollection<Palette> Palettes = new DiagramObjectCollection<Palette>();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        PaletteInstance.Targets = new DiagramObjectCollection<SfDiagramComponent>() { };
        PaletteInstance.Targets.Add(DiagramInstance);
    }
    DiagramObjectCollection<Connector> connectors = new DiagramObjectCollection<Connector>();
    protected override void OnInitialized()
    {
        Connector Connector = new Connector()
            {
                ID = "connector1",
                // Set the source and target point of the connector
                SourcePoint = new DiagramPoint() { X = 100, Y = 100 },
                TargetPoint = new DiagramPoint() { X = 200, Y = 200 },
                // Type of the connector segemnts
                Type = ConnectorSegmentType.Straight
            };
        connectors.Add(Connector);
        PaletteConnector = new DiagramObjectCollection<NodeBase>();
        Connector connector = new Connector
            {
                ID = "Link1",
                Type = ConnectorSegmentType.Straight,
                SourcePoint = new DiagramPoint() { X = 0, Y = 0 },
                TargetPoint = new DiagramPoint() { X = 60, Y = 60 }

            };
        PaletteConnector.Add(connector as NodeBase);
        Connector connector2 = new Connector
            {
                ID = "Link2",
                Type = ConnectorSegmentType.Orthogonal,
                SourcePoint = new DiagramPoint() { X = 0, Y = 0 },
                TargetPoint = new DiagramPoint() { X = 60, Y = 60 },
                TargetDecorator = new DecoratorSettings() { Shape = DecoratorShape.OpenArrow },
                Style = new ShapeStyle() { StrokeWidth = 1 }

            };
        PaletteConnector.Add(connector2 as NodeBase);
        Connector connector3 = new Connector
            {
                ID = "Link3",
                Type = ConnectorSegmentType.Bezier,
                SourcePoint = new DiagramPoint() { X = 0, Y = 0 },
                TargetPoint = new DiagramPoint() { X = 60, Y = 60 },
                TargetDecorator = new DecoratorSettings() { Shape = DecoratorShape.None },
            };
        PaletteConnector.Add(connector3 as NodeBase);
        Palettes = new DiagramObjectCollection<Palette>(){
                new Palette(){Symbols =PaletteConnector,Title="Connectors" ,IsExpanded = true},

            };
    }
}