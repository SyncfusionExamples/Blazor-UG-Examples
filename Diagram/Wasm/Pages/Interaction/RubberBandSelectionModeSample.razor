@page "/RubberBandSelectionMode"

@using Syncfusion.Blazor.Diagram
@using System.Collections.ObjectModel
@inject IJSRuntime js
@using Syncfusion.Blazor.Buttons


<SfDiagramComponent @ref="diagram" Width="50%" Height="800px" SelectionSettings="@select" @bind-Connectors="@Connectors" @bind-Nodes="NodeCollection"></SfDiagramComponent>
@functions
{

    public string ID = "diagram";
    SfDiagramComponent diagram;
    public DiagramObjectCollection<Node> NodeCollection = new DiagramObjectCollection<Node>();
    public DiagramObjectCollection<Connector> Connectors = new DiagramObjectCollection<Connector>();
    DiagramSelectionSettings select;
    protected override void OnInitialized()
    {
        select = new DiagramSelectionSettings() { RubberBandSelectionMode = RubberBandSelectionMode.CompleteIntersect };
        Node node1 = new Node()
        {
            ID = "node1",
            OffsetX = 100,
            OffsetY = 100,
            Height = 100,
            Width = 100,
            Annotations = new DiagramObjectCollection<ShapeAnnotation>()
                    {
                        new ShapeAnnotation()
                        {
                            Content = "node1"
                        },
                    },
        };
        NodeCollection.Add(node1);
        Node node2 = new Node()
        {
            ID = "node2",
            OffsetX = 100,
            OffsetY = 300,
            Height = 100,
            Width = 100,
            Annotations = new DiagramObjectCollection<ShapeAnnotation>()
                    {
                        new ShapeAnnotation()
                        {
                            Content = "node2"
                        },
                    },
        };
        NodeCollection.Add(node2);
        NodeGroup group1 = new NodeGroup()
        {
            ID = "group1",
            Children = new string[] { "node1", "node2" },
            Annotations = new DiagramObjectCollection<ShapeAnnotation>()
                        {
                            new ShapeAnnotation()
                            {
                            Content = "Group1"
                            }
                        },
        };
        NodeCollection.Add(group1);
        Node node3 = new Node()
        {
            ID = "node3",
            OffsetX = 300,
            OffsetY = 100,
            Height = 100,
            Width = 100,
            Annotations = new DiagramObjectCollection<ShapeAnnotation>()
                    {
                        new ShapeAnnotation()
                        {
                            Content = "node3"
                        },
                    },
        };
        NodeCollection.Add(node3);
        Connector connector = new Connector()
        {
            ID = "connector1",
            SourcePoint = new DiagramPoint() { X = 250, Y = 250 },
            TargetPoint = new DiagramPoint() { X = 350, Y = 350 },
        };
        Connectors.Add(connector);

    }

}